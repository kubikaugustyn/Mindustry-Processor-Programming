A
B
C
D
## First code example, should cover most of MPPL capabilities
a = rand 9
c = 0 ## Default value
@counter = 7
if (a > 8){
	a = 8
	b = rand 9
	c = a max b
}
d = getlink(c)
e = @maxItems of d

result = read(cell1, 0)
##draw.clear() = read(cell1, 0) ## Temporary
write(cell1, 0, result)
draw.clear(0, 0, 0)
draw.color(0, 0, 0, 255)
draw.col(0)
f = 0xff
draw.col(0c00ff00ff) ## %RRGGBBAA (hexadecimal)
draw.stroke(0)
draw.line(0, 0, 0, 0)
draw.rect(0, 0, 0, 0)
draw.lineRect(0, 0, 0, 0)
draw.poly(0, 0, 0, 0, 0)
draw.linePoly(0, 0, 0, 0, 0)
draw.triangle(0, 0, 0, 0, 0, 0)
draw.image(0, 0, @copper, 32, 0)
print("Hello world")

drawflush(display1)
printflush(message1)
result = getlink(0)
control.enabled(block1, 0)
control.shoot(block1, 0, 0, 0)
control.shootp(block1, 0, 0)
control.config(block1, 0)
control.color(block1, 0)
result = radar(turret1, enemy, any, any, 1, distance)
result = @copper of block1

result = 0
result = a + b
result = lookup.block(0)
result = lookup.unit(0)
result = lookup.item(0)
result = lookup.liquid(0)
result = packcolor(0, 0, 0, 1)

wait(0.5)
stop()
end()
jump(5, x == false)
jump(5, x not false)
jump(5, x < false)
jump(5, x <= false)
jump(5, x > false)
jump(5, x >= false)
jump(5, x === false)
jump(5)

ubind(@poly)
ucontrol.idle()
ucontrol.stop()
ucontrol.move(0, 0)
ucontrol.approach(0, 0, 5)
ucontrol.boost(0)
ucontrol.target(0, 0, 0)
ucontrol.targetp(0, 0)
ucontrol.itemDrop(0, 0)
ucontrol.itemTake(0, 0, 0)
ucontrol.payDrop()
ucontrol.payTake(0)
ucontrol.payEnter()
## dropped = ucontrol.payEnterIfIn(<radius>, <x>, <y>) - Suggested by "[UR] TyT|xexebe#1178" / "urtytxexebe"
dropped = ucontrol.payEnterIfIn(5, a, b)
ucontrol.mine(0, 0)
ucontrol.flag(0)
ucontrol.build(0, 0, @copper-wall, 0, 0)
type, building, floor = ucontrol.getBlock(0, 0)
result = ucontrol.within(0, 0, 0)
ucontrol.unbind()
result = uradar(enemy, any, any, distance)
outX, outY, found = ulocate.ore(@copper)
outX, outY, found, building = ulocate.building(core, true)
outX, outY, found, building = ulocate.spawn()
outX, outY, found, building = ulocate.damaged()
